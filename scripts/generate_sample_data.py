# scripts/generate_sample_data.py
import pandas as pd
import random
from faker import Faker
import os

def generate_real_estate_data(num_records=30):
    fake = Faker('vi_VN')
    
    # Real Ho Chi Minh City districts and wards
    district_wards = {
        'Qu·∫≠n 1': ['Ph∆∞·ªùng B·∫øn Ngh√©', 'Ph∆∞·ªùng B·∫øn Th√†nh', 'Ph∆∞·ªùng C·∫ßu Kho', 'Ph∆∞·ªùng C·∫ßu √îng L√£nh', 
                   'Ph∆∞·ªùng ƒêa Kao', 'Ph∆∞·ªùng Nguy·ªÖn C∆∞ Trinh', 'Ph∆∞·ªùng Nguy·ªÖn Th√°i B√¨nh', 'Ph∆∞·ªùng Ph·∫°m Ng≈© L√£o', 
                   'Ph∆∞·ªùng T√¢n ƒê·ªãnh'],
        'Qu·∫≠n 3': ['Ph∆∞·ªùng 1', 'Ph∆∞·ªùng 2', 'Ph∆∞·ªùng 3', 'Ph∆∞·ªùng 4', 'Ph∆∞·ªùng 5', 'Ph∆∞·ªùng 6', 'Ph∆∞·ªùng 7', 'Ph∆∞·ªùng 8', 'Ph∆∞·ªùng 9', 'Ph∆∞·ªùng 10', 'Ph∆∞·ªùng 11', 'Ph∆∞·ªùng 12', 'Ph∆∞·ªùng 13', 'Ph∆∞·ªùng 14'],
        'Qu·∫≠n 7': ['Ph∆∞·ªùng B√¨nh Thu·∫≠n', 'Ph∆∞·ªùng Ph√∫ M·ªπ', 'Ph∆∞·ªùng Ph√∫ Thu·∫≠n', 'Ph∆∞·ªùng T√¢n H∆∞ng', 
                   'Ph∆∞·ªùng T√¢n Ki·ªÉng', 'Ph∆∞·ªùng T√¢n Phong', 'Ph∆∞·ªùng T√¢n Ph√∫', 'Ph∆∞·ªùng T√¢n Quy', 'Ph∆∞·ªùng T√¢n Thu·∫≠n ƒê√¥ng', 'Ph∆∞·ªùng T√¢n Thu·∫≠n T√¢y'],
        'Qu·∫≠n B√¨nh Th·∫°nh': ['Ph∆∞·ªùng 1', 'Ph∆∞·ªùng 2', 'Ph∆∞·ªùng 3', 'Ph∆∞·ªùng 5', 'Ph∆∞·ªùng 6', 'Ph∆∞·ªùng 7', 'Ph∆∞·ªùng 11', 'Ph∆∞·ªùng 12', 'Ph∆∞·ªùng 13', 'Ph∆∞·ªùng 14', 'Ph∆∞·ªùng 15', 'Ph∆∞·ªùng 17', 'Ph∆∞·ªùng 19', 'Ph∆∞·ªùng 21', 'Ph∆∞·ªùng 22', 'Ph∆∞·ªùng 24', 'Ph∆∞·ªùng 25', 'Ph∆∞·ªùng 26', 'Ph∆∞·ªùng 27', 'Ph∆∞·ªùng 28'],
        'Qu·∫≠n G√≤ V·∫•p': ['Ph∆∞·ªùng 1', 'Ph∆∞·ªùng 3', 'Ph∆∞·ªùng 4', 'Ph∆∞·ªùng 5', 'Ph∆∞·ªùng 6', 'Ph∆∞·ªùng 7', 'Ph∆∞·ªùng 8', 'Ph∆∞·ªùng 9', 'Ph∆∞·ªùng 10', 'Ph∆∞·ªùng 11', 'Ph∆∞·ªùng 12', 'Ph∆∞·ªùng 13', 'Ph∆∞·ªùng 14', 'Ph∆∞·ªùng 15', 'Ph∆∞·ªùng 16', 'Ph∆∞·ªùng 17'],
        'Qu·∫≠n Th·ªß ƒê·ª©c': ['Ph∆∞·ªùng An Kh√°nh', 'Ph∆∞·ªùng An L·∫°c', 'Ph∆∞·ªùng An L·∫°c A', 'Ph∆∞·ªùng An Ph√∫', 'Ph∆∞·ªùng B√¨nh Chi·ªÉu', 'Ph∆∞·ªùng B√¨nh Th·ªç', 'Ph∆∞·ªùng Hi·ªáp B√¨nh Ch√°nh', 'Ph∆∞·ªùng Hi·ªáp B√¨nh Ph∆∞·ªõc', 'Ph∆∞·ªùng Linh Chi·ªÉu', 'Ph∆∞·ªùng Linh ƒê√¥ng', 'Ph∆∞·ªùng Linh T√¢y', 'Ph∆∞·ªùng Linh Trung', 'Ph∆∞·ªùng Linh Xu√¢n', 'Ph∆∞·ªùng Long B√¨nh', 'Ph∆∞·ªùng Long Ph∆∞·ªõc', 'Ph∆∞·ªùng Long Th·∫°nh M·ªπ', 'Ph∆∞·ªùng Long Tr∆∞·ªùng', 'Ph∆∞·ªùng Ph√∫ H·ªØu', 'Ph∆∞·ªùng Ph∆∞·ªõc B√¨nh', 'Ph∆∞·ªùng Ph∆∞·ªõc Long A', 'Ph∆∞·ªùng Ph∆∞·ªõc Long B', 'Ph∆∞·ªùng Tam B√¨nh', 'Ph∆∞·ªùng Tam Ph√∫', 'Ph∆∞·ªùng TƒÉng Nh∆°n Ph√∫ A', 'Ph∆∞·ªùng TƒÉng Nh∆°n Ph√∫ B', 'Ph∆∞·ªùng T√¢n Ph√∫', 'Ph∆∞·ªùng Tr∆∞·ªùng Th·∫°nh', 'Ph∆∞·ªùng Tr∆∞·ªùng Th·ªç']
    }
    
    property_types = ['CƒÉn h·ªô', 'Nh√† ph·ªë', 'Bi·ªát th·ª±', 'Shophouse', 'VƒÉn ph√≤ng']
    
    # Realistic property descriptions
    descriptions = [
        "CƒÉn h·ªô cao c·∫•p v·ªõi thi·∫øt k·∫ø hi·ªán ƒë·∫°i, view ƒë·∫πp, ti·ªán √≠ch ƒë·∫ßy ƒë·ªß. V·ªã tr√≠ thu·∫≠n l·ª£i, giao th√¥ng thu·∫≠n ti·ªán.",
        "Nh√† ph·ªë m·∫∑t ti·ªÅn ƒë∆∞·ªùng l·ªõn, kinh doanh t·ªët, ph√π h·ª£p m·ªü shop ho·∫∑c vƒÉn ph√≤ng. Di·ªán t√≠ch s·ª≠ d·ª•ng r·ªông r√£i.",
        "Bi·ªát th·ª± sang tr·ªçng v·ªõi thi·∫øt k·∫ø ƒë·ªôc ƒë√°o, s√¢n v∆∞·ªùn r·ªông, kh√¥ng gian s·ªëng tho√°ng ƒë√£ng. An ninh 24/7.",
        "Shophouse m·ªõi x√¢y, thi·∫øt k·∫ø ƒë·∫πp, v·ªã tr√≠ ƒë·∫Øc ƒë·ªãa. Ph√π h·ª£p kinh doanh ho·∫∑c cho thu√™ vƒÉn ph√≤ng.",
        "CƒÉn h·ªô trung c·∫•p gi√° t·ªët, ti·ªán √≠ch c∆° b·∫£n ƒë·∫ßy ƒë·ªß. Ph√π h·ª£p gia ƒë√¨nh tr·∫ª, sinh vi√™n.",
        "Nh√† ph·ªë h·∫ªm xe h∆°i, y√™n tƒ©nh, an ninh t·ªët. G·∫ßn tr∆∞·ªùng h·ªçc, b·ªánh vi·ªán, si√™u th·ªã.",
        "CƒÉn h·ªô view s√¥ng, kh√¥ng kh√≠ trong l√†nh. Thi·∫øt k·∫ø t·ªëi ∆∞u, ti·∫øt ki·ªám nƒÉng l∆∞·ª£ng.",
        "Bi·ªát th·ª± mini v·ªõi s√¢n th∆∞·ª£ng r·ªông, view th√†nh ph·ªë. Ph√π h·ª£p gia ƒë√¨nh nh·ªè.",
        "VƒÉn ph√≤ng cho thu√™ t·∫°i t√≤a nh√† vƒÉn ph√≤ng cao c·∫•p. V·ªã tr√≠ trung t√¢m, giao th√¥ng thu·∫≠n ti·ªán.",
        "CƒÉn h·ªô studio gi√° r·∫ª, ph√π h·ª£p ng∆∞·ªùi ƒë·ªôc th√¢n ho·∫∑c sinh vi√™n. G·∫ßn tr∆∞·ªùng ƒë·∫°i h·ªçc."
    ]
    
    # Realistic amenities
    amenities_list = [
        "H·ªì b∆°i, Gym, An ninh 24/7",
        "Thang m√°y, Ch·ªó ƒë·∫≠u xe, S√¢n ch∆°i tr·∫ª em",
        "G·∫ßn tr∆∞·ªùng h·ªçc, Si√™u th·ªã, B·ªánh vi·ªán",
        "C√¥ng vi√™n g·∫ßn ƒë√≥, Nh√† h√†ng, Cafe",
        "Trung t√¢m th∆∞∆°ng m·∫°i, B·∫øn xe bu√Ωt, Metro",
        "S√¢n tennis, BBQ area, Garden",
        "Gym, Spa, Restaurant",
        "Playground, Library, Business center",
        "Swimming pool, Sauna, Conference room",
        "Parking, Security, Maintenance"
    ]
    
    data = []
    for i in range(1, num_records+1):
        prop_type = random.choice(property_types)
        district = random.choice(list(district_wards.keys()))
        ward = random.choice(district_wards[district])
        
        # Generate realistic pricing based on property type and location
        if prop_type == 'CƒÉn h·ªô':
            if district in ['Qu·∫≠n 1', 'Qu·∫≠n 3']:
                price = random.randint(8, 25) * 1000000000  # 8-25 t·ª∑
                area = random.randint(60, 120)
            elif district in ['Qu·∫≠n 7', 'Qu·∫≠n B√¨nh Th·∫°nh']:
                price = random.randint(5, 15) * 1000000000  # 5-15 t·ª∑
                area = random.randint(70, 130)
            else:
                price = random.randint(3, 10) * 1000000000  # 3-10 t·ª∑
                area = random.randint(65, 110)
            bedrooms = random.randint(1, 3)
            
        elif prop_type == 'Nh√† ph·ªë':
            if district in ['Qu·∫≠n 1', 'Qu·∫≠n 3']:
                price = random.randint(30, 80) * 1000000000  # 30-80 t·ª∑
                area = random.randint(100, 200)
            elif district in ['Qu·∫≠n 7', 'Qu·∫≠n B√¨nh Th·∫°nh']:
                price = random.randint(20, 50) * 1000000000  # 20-50 t·ª∑
                area = random.randint(120, 250)
            else:
                price = random.randint(15, 35) * 1000000000  # 15-35 t·ª∑
                area = random.randint(100, 200)
            bedrooms = random.randint(3, 5)
            
        elif prop_type == 'Bi·ªát th·ª±':
            price = random.randint(50, 150) * 1000000000  # 50-150 t·ª∑
            area = random.randint(200, 400)
            bedrooms = random.randint(4, 6)
            
        elif prop_type == 'Shophouse':
            price = random.randint(25, 60) * 1000000000  # 25-60 t·ª∑
            area = random.randint(150, 300)
            bedrooms = random.randint(2, 4)
            
        else:  # VƒÉn ph√≤ng
            price = random.randint(10, 30) * 1000000000  # 10-30 t·ª∑
            area = random.randint(80, 200)
            bedrooms = 0
        
        # Generate realistic address
        street_names = ['Nguy·ªÖn Hu·ªá', 'L√™ L·ª£i', 'ƒê·ªìng Kh·ªüi', 'Pasteur', 'V√µ VƒÉn T·∫ßn', 
                       'Nguy·ªÖn Th·ªã Minh Khai', 'C√°ch M·∫°ng Th√°ng 8', '3 Th√°ng 2', 
                       'L√Ω T·ª± Tr·ªçng', 'Nam K·ª≥ Kh·ªüi Nghƒ©a', 'ƒêi·ªán Bi√™n Ph·ªß', 'V√µ Th·ªã S√°u']
        street = random.choice(street_names)
        number = random.randint(1, 200)
        address = f"{number} {street}, {ward}, {district}, TP.HCM"
        
        data.append({
            'id': f'SP{i:03d}',
            'type': prop_type,
            'district': district,
            'ward': ward,
            'address': address,
            'price': price,
            'area': area,
            'bedrooms': bedrooms,
            'direction': random.choice(['ƒê√¥ng', 'T√¢y', 'Nam', 'B·∫Øc', 'ƒê√¥ng Nam', 'T√¢y Nam', 'ƒê√¥ng B·∫Øc', 'T√¢y B·∫Øc']),
            'legal_status': random.choice(['S·ªï h·ªìng', 'S·ªï ƒë·ªè', 'H·ª£p ƒë·ªìng mua b√°n', 'ƒêang ho√†n thi·ªán ph√°p l√Ω']),
            'amenities': random.choice(amenities_list),
            'description': random.choice(descriptions),
            'posted_date': fake.date_between(start_date='-6m', end_date='today').strftime('%Y-%m-%d'),
            'status': random.choice(['available', 'pending', 'sold'])
        })
    
    return pd.DataFrame(data)

if __name__ == "__main__":
    # T·∫°o th∆∞ m·ª•c data n·∫øu ch∆∞a t·ªìn t·∫°i
    os.makedirs('data', exist_ok=True)
    
    # T·∫°o dataset v·ªõi 30 m·∫´u
    df = generate_real_estate_data(30)
    
    # L∆∞u ra file CSV
    df.to_csv('data/sample_real_estate.csv', index=False)
    print("‚úÖ ƒê√£ t·∫°o file d·ªØ li·ªáu m·∫´u: data/sample_real_estate.csv")
    print(f"üìä S·ªë l∆∞·ª£ng b·∫£n ghi: {len(df)}")
    print(f"üè† C√°c lo·∫°i h√¨nh: {df['type'].value_counts().to_dict()}")
    print(f"üìç C√°c qu·∫≠n: {df['district'].value_counts().to_dict()}")
    print(f"üí∞ Kho·∫£ng gi√°: {df['price'].min():,.0f} - {df['price'].max():,.0f} VND")